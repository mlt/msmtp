name: OpenSSL

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04] #, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: 💾 Cache downloaded Pacman packages on Windows
      if: runner.os == 'Windows'
      uses: actions/cache@v4
      with:
        path: C:\msys64\var\cache\pacman\pkg
        key: build-dep-windows
    - name: 🍺 Install dependencies on MacOS
      if: runner.os == 'macOS'
      # ca-certificates update pulls lots of deps
      run: env HOMEBREW_NO_AUTO_UPDATE=1 brew install texinfo autoconf automake
    - name: 🐧 Install dependencies on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -qq -y -o=Dpkg::Use-Pty=0 libidn2-dev gettext dnsmasq stunnel4
        echo "🚇 Set up stunnel"
        cat > stunnel.conf <<'EOT'
        pid = /tmp/stunnel.pid
        debug = debug
        output = /tmp/stunnel.log
        [msmtpd]
        accept = 127.0.0.1:465
        cert = ca/certs/revoked.cert.pem
        key = ca/private/revoked.key.pem
        CAfile = ca/certs/ca.cert.pem
        exec = /home/runner/work/msmtp/msmtp/src/msmtpd
        execArgs = msmtpd --inetd --command=/home/runner/work/msmtp/msmtp/log.sh
        EOT
        cat > log.sh <<'EOT'
        #!/bin/sh
        dd status=none of=/tmp/msmtpd.log
        EOT
        chmod +x log.sh
        echo "🌐 Set up DNS"
        sudo -E bash -c "cat > /etc/dnsmasq.d/msmtp.conf" <<'EOT'
        no-resolv
        no-hosts
        bind-interfaces
        interface=lo
        no-dhcp-interface=lo
        listen-address=127.0.0.1
        domain=test
        host-record=почта.test,127.0.0.1
        host-record=mail.test,127.0.0.1
        host-record=expired.test,127.0.0.1
        host-record=revoked.test,127.0.0.1
        host-record=ocsp.почта.test,127.0.0.1
        mx-host=почта.test,почта.test,10
        srv-host=_submission._tcp.почта.test,почта.test,587,0,5
        srv-host=_submission._tcp.mail.test,mail.test,587,0,5
        server=168.63.129.16
        EOT
        sudo systemctl start dnsmasq
        sudo mkdir /etc/systemd/resolved.conf.d
        sudo bash -c "cat > /etc/systemd/resolved.conf.d/msmtp.conf" <<'EOT'
        [Resolve]
        DNS=127.0.0.1
        EOT
        sudo sed -i '/^hosts/s/files/resolve [!UNAVAIL=return] files/' /etc/nsswitch.conf
        sudo systemctl restart systemd-resolved.service
        dig +short +idnin +idnout _submission._tcp.почта.test SRV
        # host -t SRV _submission._tcp.почта.test
        echo "::group::🔏 Set up PKI"
        cat > openssl.conf <<'EOT'
        [ ca ]
        default_ca = CA_default
        [ CA_default ]
        dir=./ca
        crl_dir          = $dir/crl
        new_certs_dir    = $dir/newcerts
        database         = $dir/index.txt
        serial           = $dir/serial
        private_key      = $dir/private/ca.key.pem
        certificate      = $dir/certs/ca.cert.pem
        crlnumber        = $dir/crlnumber
        crl              = $dir/crl/ca.crl.pem
        policy           = policy_default
        default_days     = 30
        default_crl_days = 7
        copy_extensions  = copy
        #preserve = yes # has no effect to keep commonName with empty policy?
        [ v3_ca ]
        basicConstraints       = critical, CA:true
        [ policy_default ]
        commonName             = supplied
        # https://github.com/openssl/openssl/issues/11169
        [ server_cert ]
        crlDistributionPoints = URI:http://xn--80a1acny.test/crl
        authorityInfoAccess   = OCSP;URI:http://ocsp.xn--80a1acny.test
        [ ocsp ]
        extendedKeyUsage       = critical, OCSPSigning
        EOT
        mkdir ca
        pushd ca
        mkdir certs crl csr newcerts private
        chmod 700 private # || echo "Skip chmod on Windows"
        touch index.txt
        echo 1000 > serial
        echo 1000 > crlnumber
        popd
        openssl req -x509 -newkey ed25519 -extensions v3_ca -keyout ca/private/ca.key.pem -out ca/certs/ca.cert.pem -noenc -subj "/CN=Test Root CA"
        certutil -addstore -enterprise -f -v root ca/certs/ca.cert.pem || echo "Windows only"
        ## https://github.com/openssl/openssl/issues/11169
        openssl req -new -newkey ed25519 -keyout ca/private/test.key.pem -noenc -out ca/csr/test.csr.pem -subj "/CN=xn--80a1acny.test" -addext "crlDistributionPoints=URI:http://xn--80a1acny.test/crl" -addext "authorityInfoAccess=OCSP;URI:http://ocsp.xn--80a1acny.test" -addext "tlsfeature=status_request"
        openssl req -new -newkey ed25519 -keyout ca/private/revoked.key.pem -noenc -out ca/csr/revoked.csr.pem -subj "/CN=revoked.test" -addext "crlDistributionPoints=URI:http://xn--80a1acny.test/crl" -addext "authorityInfoAccess=OCSP;URI:http://ocsp.xn--80a1acny.test" -addext "tlsfeature=status_request_v2"
        openssl req -new -newkey ed25519 -keyout ca/private/expired.key.pem -noenc -out ca/csr/expired.csr.pem -subj "/CN=expired.test"

        export OPENSSL_CONF=openssl.conf
        openssl ca -batch -notext -in ca/csr/test.csr.pem -out ca/certs/test.cert.pem
        openssl ca -batch -notext -in ca/csr/revoked.csr.pem -out ca/certs/revoked.cert.pem
        openssl ca -crl_reason keyCompromise -revoke ca/certs/revoked.cert.pem
        openssl ca -batch -startdate 240101000000Z -enddate 240102000000Z -notext -in ca/csr/expired.csr.pem -out ca/certs/expired.cert.pem
        openssl ca -gencrl -out ca/crl/crl.pem
        # rfc5280 4.2.1.13
        openssl crl -in ca/crl/crl.pem -outform DER -out ca/crl/crl
        openssl req -new -newkey ed25519 -keyout ca/private/ocsp.key.pem -noenc -out ca/csr/ocsp.csr.pem -subj "/CN=ocsp.xn--80a1acny.test"
        openssl ca -batch -extensions ocsp -notext -in ca/csr/ocsp.csr.pem -out ca/certs/ocsp.cert.pem
        echo "::endgroup::"
    - name: 🔍 Add MSYS2 to path on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\msys64\ucrt64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: 🪟 Install dependencies on Windows
      if: runner.os == 'Windows'
      # autotools pulls libtool as well
      run: pacman --noconfirm -S mingw-w64-ucrt-x86_64-gcc mingw-w64-ucrt-x86_64-openssl mingw-w64-ucrt-x86_64-ca-certificates mingw-w64-ucrt-x86_64-libidn2 mingw-w64-ucrt-x86_64-pkgconf pkgconf make texinfo autoconf automake
    - name: 🔍 Look up system details
      id: conf
      run: |
        openssl version -a      # KTLS?
        echo "CONF=$(openssl version -d | awk -F'"' '{print $2}')/openssl.cnf" >> "$GITHUB_OUTPUT"
        cp `openssl version -d | awk -F'"' '{print $2}'`/openssl.cnf ./
    - name: ⚒ Build
      env: # needed for Windows or networking code won't link properly
        MSYSTEM: UCRT64
      run: |
        autoreconf -i
        ./configure --with-tls=openssl --with-libidn CFLAGS=--coverage LDFLAGS=-lgcov
        make
    - name: 📣 Test OCSP response on Linux
      if: runner.os == 'Linux'
      run: |
        sudo openssl ocsp -text -nmin 60 -port 80 -index ca/index.txt -CA ca/certs/ca.cert.pem -rkey ca/private/ocsp.key.pem -rsigner ca/certs/ocsp.cert.pem >/tmp/ocsp.log 2>&1 &
        sudo stunnel stunnel.conf
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --tls-trust-file=ca/certs/ca.cert.pem --host=revoked.test 2>&1 | tee output.log || true
        grep -q 'OCSP Cert Status=revoked' output.log && echo "🎉 Success"
        sudo kill -9 $(</tmp/stunnel.pid)
        sed -i 's/revoked/test/g' stunnel.conf
        sudo stunnel stunnel.conf
        echo Hello | ./src/msmtp --from=root@mail.test --tls --port=465 --tls-starttls=off --tls-trust-file=ca/certs/ca.cert.pem --host=почта.test --tls-priorities=" MaxProtocol=TLSv1.2 " --debug postmaster@почта.test || true
        grep -q 'Hello' /tmp/msmtpd.log && echo "🎉 Success, message is accepted"
        grep -q 'TLSv1.2' /tmp/msmtpd.log && echo "🎉 Success, protocol version applied using TLS priorities"
    - name: Test SRV
      if: runner.os == 'Linux'
      run: |
        ./src/msmtp --configure user@почта.test 2>&1 | tee output.log || true
        grep -q 'host почта.test' output.log && echo "🎉 Success"
    - name: Test OpenSSL config
      continue-on-error: true
      run: |
        echo "👉 msmtp specific section"
        cat <<'EOT' > openssl.cnf
        msmtp = msmtp_init
        [msmtp_init]
        ssl_conf = msmtp_ssl
        [msmtp_ssl]
        system_default = msmtp_defaults
        [msmtp_defaults]
        MaxProtocol = TLSv1.1
        EOT
        OPENSSL_CONF=openssl.cnf ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=smtp.gmail.com 2>&1 | tee output.log || true
        grep -q 'no protocols available' output.log && echo "🎉 Success"
        echo "👉 global section"
        cat <<'EOT' > openssl.cnf
        openssl_conf = msmtp_init
        [msmtp_init]
        ssl_conf = msmtp_ssl
        [msmtp_ssl]
        system_default = msmtp_defaults
        [msmtp_defaults]
        MaxProtocol = TLSv1.1
        EOT
        OPENSSL_CONF=openssl.cnf ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=smtp.gmail.com 2>&1 | tee output.log || true
        grep -q 'no protocols available' output.log && echo "🎉 Success"
    - name: Test expired
      continue-on-error: true
      run: |
        ./src/msmtp --serverinfo --tls --port=443 --tls-starttls=off --host=expired.badssl.com 2>&1 | tee output.log || true
        grep -q 'certificate has expired' output.log && echo "🎉 Success"
    - name: Test wrong host
      continue-on-error: true
      run: |
        ./src/msmtp --serverinfo --tls --port=443 --tls-starttls=off --host=wrong.host.badssl.com 2>&1 | tee output.log || true
        grep -q 'hostname mismatch' output.log && echo "🎉 Success"
    - name: Test revoked
      continue-on-error: true
      run: |
        curl -sLO http://crl3.digicert.com/DigiCertG5TLSECCSHA3842021CA1-1.crl
        echo "👉 Test CRL in DER format"
        ./src/msmtp --serverinfo --tls --port=443 --tls-starttls=off --host=digicert-tls-ecc-p384-root-g5-revoked.chain-demos.digicert.com --tls-crl-file=DigiCertG5TLSECCSHA3842021CA1-1.crl 2>&1 | tee output.log || true
        grep -q 'certificate revoked' output.log && echo "🎉 Success"
        echo "⚙ Converting CRL to PEM format"
        openssl crl -inform der -in DigiCertG5TLSECCSHA3842021CA1-1.crl -out DigiCertG5TLSECCSHA3842021CA1-1.pem
        echo "👉 Test CRL in PEM format"
        ./src/msmtp --serverinfo --tls --port=443 --tls-starttls=off --host=digicert-tls-ecc-p384-root-g5-revoked.chain-demos.digicert.com --tls-crl-file=DigiCertG5TLSECCSHA3842021CA1-1.pem 2>&1 | tee output.log || true
        grep -q 'certificate revoked' output.log && echo "🎉 Success"
    - name: Test wrong host name on GMX
      continue-on-error: true
      run: |
        echo "👉 Use incorrect host 🖥 smtp.gmx.com to connect, but swap 🖥 mail.gmx.com for certificate verification"
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=smtp.gmx.com --tls-host-override=mail.gmx.com
        echo "👉 Use incorrect host 🖥 smtp.gmx.com to connect, expecting mismatch"
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=smtp.gmx.com 2>&1 | tee output.log || true
        grep -q 'hostname mismatch' output.log && echo "🎉 Success"
        echo "❗Use incorrect host 🖥 smtp.gmx.com to connect and ignore certificate check"
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=smtp.gmx.com --tls-certcheck=off
    - name: Test SNI
      continue-on-error: true
      run: |
        echo "👉 Proper connect 🖥 smtp.gmail.com, look at IPs and names on certificates"
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=smtp.gmail.com
        echo "👉 Use wrong host name 🖥 imap.gmail.com that points to same group. ⚠ It won't work without SSL_set_tlsext_host_name"
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=imap.gmail.com
        echo "👉 Use wrong host name 🖥 imap.gmail.com, but proper one 🖥 smtp.gmail.com for certificate verification"
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=imap.gmail.com --tls-host-override=smtp.gmail.com
    - name: Test on a bad network
      if: runner.os == 'Linux'
      continue-on-error: true
      run: |
        # cat /sys/class/net/eth0/mtu
        # cat /proc/sys/net/ipv4/tcp_mtu_probing
        # cat /proc/sys/net/ipv4/ip_no_pmtu_disc
        ip route
        echo "🧨 Introduce chaos with NetEm"
        # sudo ip route add 172.25.167.238/31 via $(ip route show default | cut -d\  -f3) mtu lock 552
        # sudo tc qdisc add dev eth0 root netem delay 20ms 20ms loss 60% corrupt 60% rate 300kbit
        sudo tc qdisc add dev eth0 root netem delay 20ms 20ms loss 50% corrupt 50%
        # sudo tc qdisc add dev eth0 root netem delay 20ms 20ms loss 55% corrupt 55%
        echo "👉 Use blocking I/O"
        for i in {1..10}; do
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=172.253.122.108 --tls-host-override=smtp.gmail.com > /dev/null
        done || true
        echo "👉 Use non-blocking I/O"
        for i in {1..10}; do
        ./src/msmtp --serverinfo --tls --port=465 --tls-starttls=off --host=172.253.122.108 --tls-host-override=smtp.gmail.com --timeout=10 > /dev/null
        done || true
        sudo tc qdisc del dev eth0 root
        # sudo ip route del 172.25.167.238/31
    - name: Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: misc-${{ matrix.os }}
        path: |
          config.log
          openssl.cnf
    - uses: codecov/codecov-action@v4
      with:
        plugin: gcov
        working-directory: src
        token: ${{ secrets.CODECOV_TOKEN }}
